name: CI/CD - Deploy to EC2

on:
  push:
    branches:
      - main

jobs:

  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: EC2 Public IP
        run: |
          IP=$(aws ec2 describe-instances --filters "Name=tag:Name,Values=ubuntu-instance" "Name=instance-state-name,Values=running" \
          --query "Reservations[0].Instances[0].PublicIpAddress" \
            --output text)
          echo "EC2_IP=$IP" >> $GITHUB_ENV

      - name: Setup SSH key
        run: |
          echo "${{ secrets.EC2_SSH_KEY }}" > CodeChallenger.pem
          chmod 400 CodeChallenger.pem

      - name: SSH into EC2 and run commands
        run: |
          ssh -o StrictHostKeyChecking=no -i CodeChallenger.pem ubuntu@$EC2_IP << 'EOF'
            echo "Logging into Docker Hub..."
            echo "${{ secrets.DOCKER_PASSWORD }}" | sudo docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
            
            echo "Pulling latest Docker image..."
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/cloudchallenger:latest

            echo "Stopping old container (if exists)..."
            sudo docker rm -f app || true

            echo "Starting new container..."
            sudo docker run -d -p 3000:3000 --name app \
              ${{ secrets.DOCKER_USERNAME }}/cloudchallenger:latest
          EOF